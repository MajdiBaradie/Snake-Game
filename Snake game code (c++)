/*    >> مشروع لعبة الافعى  << 

 << مكونات البرنامج >>
 
  تتكون لعبة الافعى من عده مكونات اساسية : 
 
  1-) ايطار اللعبه 
  2-) راس الافعى 
  3-) ذيل الافعى 
  4-) الفواكة او الرموز التي ياكلها الثعبان 
  5-) نقاط التقدم (score)
  6-) حالة اللاعب خاسر او لا 


 
   << نظام اللعبة  >>

   1-)  يخسر اللاعب في حال لامس راس الافعى الايطار 
   2-) يخسر اللاعب في حال لامس الرأس الذيل 
   3-) يتم توزيع الفواكه بشكل عشوائي 
   4-) يحصل اللاعب على 10 نقاط ويزيد طول الافعى مع كل فاكهة
   5-)  تزداد سرعة الافعى مع كل نقطة يكسبها 
   6-) الراس يشير الى اتجاه الحركة
   7-) يتم التحكم بحركه الثعبان من خلال الكيبور (w  , s , a ,d)  {
   w - up 
   s- douwn 
   a- left 
   d - rigth
       
   8-) الفواكه تتوزع بشكل عشوائي داخل نطاق الايطار 

	   }

   <<  نبدأ على بركة الله >>


*/







#include< iostream>
#include< ctime > // مكتبه الوقت 
#include< conio.h>  // تحتوي على دوال مساعدة لتنفيذ عمليات الإدخال والإخراج إلى وحدة التحكم من برنامج
/*
<< conio.h >> 
سوف نستخدم منها العناصر الاتية 

   _kbhit() : وتستخدم لتحديد ما إذا تم الضغط على مفتاح أم لا 

   إذا تم الضغط على أحد المفاتيح فإنها تُرجع قيمة غير صفرية وإلا فإنها تُرجع صفرًا

	 _getch():  يقرأ حرفًا واحدًا من لوحة المفاتيح.


*/
#include< string> 
#include<Windows.h>  // سبق و تحدثنا عنها في المشروع السابق (digital clock)  

using namespace std;
/* 
<< المتغيرات المستخدمة >> 

  int frut_x, frut_y , head_x, head_y, => لتحديد موقع الراس وموقع الفواكة 
  string shap = ">"; =>  متغير يحتوي على شكل الراس و الاتجاه الذي يشير اليه  

  int width, heght => تحديد ابعاد الايطار 

   int taile_x[50], taile_y[50] => مصفوفتين  لتحديد مكان الذيل والتحكم  بطوله 

   bool lose;  => حالة اللاعب هل خسر ام لا 

   int top = 1, down = 2, Right=3, Left =4 , dir  => تحديد اتجاه الحركة 
   int v=100;     متغير يحتوي على عدد ملي ثانيه سنستخدمه لتغيير سرععة الافعى باستخدمام امر (Sleep()) 

*/
string shap = ">";
int width, heght, frut_x, frut_y;
int head_x, head_y, taile  , taile_x[50], taile_y[50], score;
bool lose;
int top = 1, down = 2, Right=3, Left =4 , dir , v=100;

void generat_frut() {  // فنكشن صناعة الفواكه حيث يعطيها موقع عشوائي 

	srand(time(NULL));  // يستخدم لتهيئة مولدات الأرقام العشوائية 
	/*  نستخدم الوقت الحالي،
	مما يضمن الحصول على أرقام عشوائية مختلفة في كل مرة يتم فيها تشغيل البرنامج
	
	*/
	frut_x = rand() % (width -2 ) + 1; 
	frut_y = rand() % (heght - 2) + 1;
	/*
	   لإنشاء عدد عشوائي بين 1 و (عرض , طول )الايطار 
	          (  y  ,  x) 
	*/
}
void setup() {   // Initial values 

	// map properties 

	width = 40;
	heght = 20;
	generat_frut();
	// snake properties 

	head_x = 20 ;
		head_y = 10  ; 
		taile = 0 ; // طول الذيل 
		v = 100;   // السرعة الابتدائه

	// plear properties 
		score = 0;
		lose = false;
		
}
void draw() { // ( الفنكشن المسؤول عن طباعة الايطار و موقع الراس و الذيل (كل ما يظهر للمستخدم    

	system("cls"); // مسح الشاشة

	for (int i = 0; i < 20; i++) {  // طباعة محتويات محور y

		for (int j = 0; j < 40; j++) {       // طباعة محتويات محور y
			/*
			 
			                الخطوط تمثل مكان النجوم الايطار 
				   (0,0)____________(0,39) 
			         |                |
			         |				        |
			         | 				        |
			       (19,0)____________(19,39)
					 
					 ولهذا نحدد الشروط التالية 
			    
			*/
			if (i == 0 || i == 19)  
				cout << "*";
			else if (j == 39 || j == 0)
				cout << "*";
			else if (i == head_y && j == head_x)   // في حال تساوت احداثيات الرأس نطبع شكل الرأس 
				cout << shap;            
			else if (i == frut_y && j == frut_x) // في حال تساوت احداثيات الفاكهة نطبع شكل الفاكهة
				cout << "$";

			else {
				bool printed = false; // لفحص اذا ما تم طباعه ذيل 

				for (int k = 0; k < taile; k++)  // لطباعة الذيل في حال محاور الذيل في نفس الموقع  
				{
					if (taile_x[k] == j && taile_y[k] == i){ 
						cout << "o";
					printed = true; 
					break; 
					}
					
				}
				if (!printed) //سيطبع فراغات في حال لم ينطبق الشرط السابق 
					cout << " ";

			}
		}
		cout << "\n";
	}
	cout << " \n your Score :  " << score;
}

void input() {

	if (_kbhit()) // فحص اذا ما تم الضغط على اي زر في الكيبورد 
	{
		char c = _getch(); // استقبال الحرف وتخزينه في المتغير c
		switch(c)
		{
		case 'w':
			dir = top;
			break;
		case 's':
			dir = down;
			break;
		case 'd':
			dir = Right;
			break;
		case 'a':
			dir = Left ;
			break;

		}
	
	
	
	}

}
void sheft(int arr[], int size) //  فنكشن لعمل ازاحه للمصفوفات التي تمثل الذيل و عمل الازاحات يحاكي حركة الذيل  
{
	for (int i = size - 2; i >= 0; i--)// هذه الطريقه بدائية نوعا مما لكن سنترك المجال لك للابداع 
		arr[i + 1] = arr[i];


}

void move() { // المتحكم بحركه الثعبان من خلال تغيير موقع الراس وازاحه الذيل 

	sheft(taile_x, 50);  // ازاحه لمحور x
	sheft(taile_y, 50);  // ازاحه لمحور y
	taile_x[0] = head_x;      
	taile_y[0] = head_y;

		switch (dir)
		{
		case 1:
			head_y--;  // المحور العموي ينقص عند الصعود لاعلى ويزداد للاسفل 
			shap = "^"; break;
		case 2:
			head_y++; 
			shap =  "v"; break;
		case 3:
			head_x++;
			shap = ">"; break;
		case 4:
			head_x--;
			shap = "<"; break;
		}
		if (head_y >= 20 || head_x >= 40 || head_y <= 0 || head_x <= 0  ){ // حاله الخساره الاولى اذا اجتمع الراس مع الايطار 
			lose = true;
			
		}
		for (int i = 0; i < taile ; i++) {  // حاله الخساره الثانية اذا اجتمع الراس مع اي جزء من الذيل 
			if (head_x == taile_x[i] && head_y == taile_y[i])
				
				lose = true; 
		}
		if (head_x == frut_x && head_y == frut_y) // زيادة النقاط و حجم الذيل و سرعة الحركة
		{
			generat_frut();
			score+=10;
			taile++;
			if( v >= 30) // الحد الاعلى للسرعة
			v-= 10;
			cout << " \a"; // اصدار الصوت 

		}


	}

/*
Done by  >> Majdi Baradie << 

Instgram : 
     https://www.instagram.com/cs_engineers_ps?igsh=OTZsNG5pZmg4azJw
	 
Facebook group : 

     https://www.facebook.com/groups/812129934084277/?ref=share

*/


     



int main() {
	int c =1;
	
	while (c != 2){
		setup();
	while (!lose)
	{

     
	  draw();
	  input();
	  move();

	  Sleep(v);
	  

	}
	
	cout << " \n \n loser \n \n ";

	cout << " 1-) Play again  \t  2-) Exit \n ";
	cin >> c;

  }
	return 0; 
 }
/*
 ماذا بعد ؟؟ 

 الان يمكنك العمل على تطوير اللعبة واضافة ميزات اخرى 
 و اصلاح العيوب التي قد تحدث 
 
 
 >>  دمتم في امان الله   <<
 
 
 */
